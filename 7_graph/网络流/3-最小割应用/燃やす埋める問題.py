# https://zenn.dev/kiwamachan/articles/37a2c646f82c7d
# https://shindannin.hatenadiary.com/entry/2017/11/15/043009


# 最小カットを使って「燃やす埋める問題」を解く
# `最小割考虑的是不连接时的花费`

# a1,...,an の　N個の廃棄物がある。
# 全て燃やすか埋めるかして処分する。それぞれにコストがかかる。
# 燃やすコスト：[m1,m2,...,mn]
# 埋めるコスト：[u1,u2,...,un]
# !さらに a1を燃やしてa2を埋めると罰金100円　2つの処分方法の組合せによる追加条件がいくつかある
# かかるコストを最小化せよ。
# !即求最小割(最少的罚款)

# 源点为燃やす
# 汇点为埋める
# !a1を燃やしてa2を埋めると罰金100円:a1=>a2有一条罚款100的流
# !求图中的最小割 (即每个点都有唯一的归属)


# https://ei1333.github.io/luzhiled/snippets/memo/project-selection.html
# 问题:
# - 给所有顶点分配0/1
# - xi选0、yi选1时失去zi分
# - 求最小失去分数
# 解法:
# - 构建0的点集合S,1的点集合T
# - 对(xi,yi,zi)约束条件,xi->yi有zi的流
# - 求最小割,即为最小失去分数

# !制约条件变形(下面的w指的是一个新的点,∞表示唯一的无穷远点):
# 1.x分配到0时失去z分 (x,T,z)
# 2.x分配到0时获得z分 (S,x,z) + 无条件地获得z分
# 3.x分配到1时失去z分 (S,x,z)
# 4.x分配到1时获得z分 (x,T,z) + 无条件地获得z分
# 5.x和y同时分配到0时获得z分 (S,w,z)+(w,x,∞)+(w,y,∞)+无条件地获得z分
# 6.x和y同时分配到1时获得z分 (w,T,z)+(x,w,∞)+(y,w,∞)+无条件地获得z分

# 如果出现
# "x,y同时分配到0时失去z分/同时分配到1时失去z分"
# 那么就很难做了
# 当原图是二分图时,需要将一方的布尔值取反,然后再转化为
# !"x分配到0且y分配到1时失去z分"
