from typing import List
from heapq import heappush
from collections import defaultdict


# 4 <= n <= 5 * 104


class Solution:
    def maximumScore(self, scores: List[int], edges: List[List[int]]) -> int:
        # 序列中每 相邻 节点之间有边相连。
        # 序列中没有节点出现超过一次。
        # 请你返回一个长度为 4 的合法节点序列的最大分数。如果不存在这样的序列，请你返回 -1 。

        # dfs不可能 只需要枚举边即可
        adjMap = defaultdict(list)
        for v1, v2 in edges:
            heappush(adjMap[v1], (-scores[v2], v2))
            heappush(adjMap[v2], (-scores[v1], v1))

        res = -1
        for v1, v2 in edges:
            score1, score2 = scores[v1], scores[v2]
            nei1 = adjMap[v1][:5]
            nei2 = adjMap[v2][:5]
            for score3, v3 in nei1:
                score3 = -score3
                for score4, v4 in nei2:
                    score4 = -score4
                    if len(set([v1, v2, v3, v4])) == 4:
                        res = max(res, score1 + score2 + score3 + score4)

        return res


print(
    Solution().maximumScore(
        scores=[5, 2, 9, 8, 4], edges=[[0, 1], [1, 2], [2, 3], [0, 2], [1, 3], [2, 4]]
    )
)

print(Solution().maximumScore(scores=[9, 20, 6, 4, 11, 12], edges=[[0, 3], [5, 3], [2, 4], [1, 3]]))
print(
    Solution().maximumScore(
        scores=[14, 12, 10, 8, 1, 2, 3, 1],
        edges=[[1, 0], [2, 0], [3, 0], [4, 0], [5, 1], [6, 1], [7, 1], [2, 1]],
    )
)
# 44

# print(
#     Solution().maximumScore(
#         scores=[14, 12, 10, 8, 1, 2, 3, 1],
#         edges=[[1, 0], [2, 0], [3, 0], [4, 0], [5, 1], [6, 1], [7, 1], [2, 1]],
#     )
# )

print(
    Solution().maximumScore(
        scores=[
            21446,
            84617,
            7882,
            30895,
            4450,
            45777,
            2037,
            558,
            47861,
            41611,
            20856,
            61403,
            71198,
            87569,
            91092,
            50475,
            5480,
            67313,
            94137,
            3407,
            33043,
            62233,
            46897,
            89054,
            31418,
            84395,
            96411,
            35603,
            30353,
            11,
            7170,
            58054,
            6444,
            86700,
            78981,
            37588,
            41409,
            66545,
            91203,
            6477,
            76943,
            77249,
            23576,
            25261,
            24916,
            20316,
            23175,
            6507,
            4405,
            89995,
            72104,
            35421,
            48382,
            48576,
            44506,
            68541,
            79490,
        ],
        edges=[
            [46, 13],
            [13, 42],
            [42, 8],
            [49, 7],
            [7, 10],
            [10, 51],
            [52, 3],
            [3, 40],
            [40, 30],
            [34, 32],
            [32, 54],
            [54, 50],
            [13, 48],
            [48, 32],
            [32, 53],
            [34, 11],
            [11, 39],
            [39, 7],
            [5, 21],
            [21, 28],
            [28, 50],
            [31, 14],
            [14, 46],
            [46, 6],
            [42, 14],
            [14, 25],
            [25, 54],
            [46, 36],
            [36, 49],
            [49, 51],
            [43, 12],
            [12, 5],
            [5, 39],
            [51, 32],
            [32, 29],
            [29, 11],
            [7, 5],
            [5, 6],
            [6, 53],
            [37, 2],
            [2, 29],
            [29, 54],
            [15, 40],
            [40, 1],
            [1, 46],
        ],
    )
)

# [21446,84617,7882,30895,4450,45777,2037,558,47861,41611,20856,61403,71198,87569,91092,50475,5480,67313,94137,3407,33043,62233,46897,89054,31418,84395,96411,35603,30353,11,7170,58054,6444,86700,78981,37588,41409,66545,91203,6477,76943,77249,23576,25261,24916,20316,23175,6507,4405,89995,72104,35421,48382,48576,44506,68541,79490]
# [[46,13],[13,42],[42,8],[49,7],[7,10],[10,51],[52,3],[3,40],[40,30],[34,32],[32,54],[54,50],[13,48],[48,32],[32,53],[34,11],[11,39],[39,7],[5,21],[21,28],[28,50],[31,14],[14,46],[46,6],[42,14],[14,25],[25,54],[46,36],[36,49],[49,51],[43,12],[12,5],[5,39],[51,32],[32,29],[29,11],[7,5],[5,6],[6,53],[37,2],[2,29],[29,54],[15,40],[40,1],[1,46]]
# 输出：
# 286632
# 预期：
# 292097

