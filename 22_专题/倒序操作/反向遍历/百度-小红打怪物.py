# 百度-小红打怪物
# 有n个怪物排成一排，第i个怪物的血量为ai。小红有两个技能可以打怪：
# 1. 强力攻击，消耗1mp，对一只怪物造成1点伤害。
# 2. 踏前斩，消耗5mp，对当前怪物造成1的伤害，同时剑气将波及后两个怪物，
# 对下一个怪物造成2点伤害，对下下个怪物造成3点伤害。
# 如果一个怪物受伤后血量小于等于0，则怪物死亡。死亡后怪物的尸体依然占据一个位置，会被踏前斩的剑气打到。
# !小红想知道，击杀全部怪物至少需要花费多少mp？

# 输入一个n和n个数字作为所有怪物血量
# 输出最小使用的mp

# input:
# 5
# 1 2 4 2 3

# output:
# 10


# !倒序遍历+贪心(注意不能正序，反例12369)
# 证明思路：
# !从前往后放技能，必然会导致最后2个元素无法被技能完全覆盖。
# !即前面的决策会影响到后面 而后面的决策不会影响到前面

n = int(input())
hp = list(map(int, input().split()))

res = 0
for i in range(n - 1, -1, -1):
    if i - 2 >= 0:
        num1, num2, num3 = hp[i - 2], hp[i - 1], hp[i]
        skill = min(num1, num2 // 2, num3 // 3)
        res += skill * 5
        hp[i - 2] -= skill
        hp[i - 1] -= skill * 2
        hp[i] -= skill * 3
    res += hp[i]
print(res)
