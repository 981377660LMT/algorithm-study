// # 若两台主机的IP地址分别与它们的子网掩码相“与”后的结果相同，则说明这两台主机在同一子网中。
// # 示例：
// # I P 地址　 192.168.0.1
// # 子网掩码　 255.255.255.0

import { IPToInt } from './IP地址与int整数的转换'

// # 转化为二进制进行运算：

// # I P 地址　  11000000.10101000.00000000.00000001
// # 子网掩码　11111111.11111111.11111111.00000000

// # AND运算   11000000.10101000.00000000.00000000

// # 转化为十进制后为：
// # 192.168.0.0

// # I P 地址　 192.168.0.254
// # 子网掩码　 255.255.255.0

// # 转化为二进制进行运算：

// # I P 地址　11000000.10101000.00000000.11111110
// # 子网掩码  11111111.11111111.11111111.00000000

// # AND运算  11000000.10101000.00000000.00000000

// # 转化为十进制后为：
// # 192.168.0.0

// # 通过以上对两台计算机IP地址与子网掩码的AND运算后，我们可以看到它运算结果是一样的。均为192.168.0.0，所以这二台计算机可视为是同一子网络。
function isSame(ip1: string, ip2: string, mask: string) {
  return (IPToInt(ip1) & IPToInt(mask)) === (IPToInt(ip2) & IPToInt(mask))
}

if (require.main === module) {
  console.log(isSame('192.168.0.1', '192.168.0.254', '255.255.255.0'))
}

export {}
