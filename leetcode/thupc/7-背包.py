# 本题中，你需要解决完全背包问题。

# 有
# �
# n 种物品，第
# �
# i 种物品单个体积为
# �
# �
# v
# i
# ​
#  、价值为
# �
# �
# c
# i
# ​
#  。

# �
# q 次询问，每次给出背包的容积
# �
# V，你需要选择若干个物品，每种物品可以选择任意多个（也可以不选），在选出物品的体积的和恰好为
# �
# V 的前提下最大化选出物品的价值的和。你需要给出这个最大的价值和，或报告不存在体积和恰好为
# �
# V 的方案。

# 为了体现你解决 NP-Hard 问题的能力，
# �
# V 会远大于
# �
# �
# v
# i
# ​
#  ，详见数据范围部分。

# 输入格式
# 从标准输入读入数据。

# 第一行两个整数
# �
# ,
# �
# n,q，表示物品种数和询问次数。

# 接下来
# �
# n 行每行两个整数
# �
# �
# ,
# �
# �
# v
# i
# ​
#  ,c
# i
# ​
#   描述一种物品。

# 接下来
# �
# q 行每行一个整数
# �
# V 描述一次询问中背包的体积。

# 输出格式
# 输出到标准输出。

# 对于每组询问输出一行一个整数。若不存在体积和恰好为
# �
# V 的方案，输出 -1；否则输出最大的选出物品的价值和。

# !x1*v1+x2*v2+...+xn*vn=V 的条件下最大化 x1*c1+x2*c2+...+xn*cn 的值。

n, q = map(int, input().split())
goods = [tuple(map(int, input().split())) for _ in range(n)]
for _ in range(q):
    V = int(input())
