# 你的音乐播放器里有 N 首不同的歌，在旅途中，你的旅伴想要听 L 首歌（不一定不同，即，允许歌曲重复）。请你为她按如下规则创建一个播放列表：
# 每首歌至少播放一次。
# 一首歌只有在其他 K 首歌播放完之后才能再次播放。

# 0 <= K < N <= L <= 100
MOD = int(1e9 + 7)


def A(n, k) -> int:
    """排列数"""
    ...


class Solution:
    def numMusicPlaylists(self, N: int, L: int, K: int) -> int:
        """一共N首歌曲，目标列表长度是L，相同歌曲的最小间隔是k。
        
        求合法的歌单数
        划分子集:dp[i][j] 表示播放列表长度为i，正好有j首歌曲的方案数
        """


print(Solution().numMusicPlaylists(3, 3, 1))
# 输出：6
# 解释：有 6 种可能的播放列表。[1, 2, 3]，[1, 3, 2]，[2, 1, 3]，[2, 3, 1]，[3, 1, 2]，[3, 2, 1].

