# 判断两个矩形是否相交
class Solution:
    def solve(self, rect0, rect1):
        return not (
            rect1[0] >= rect0[2]
            or rect0[0] >= rect1[2]
            or rect1[1] >= rect0[3]
            or rect0[1] >= rect1[3]
        )


# 左下角，右上角
print(Solution().solve([0, 0, 2, 2], [1, 1, 3, 3]))
"""
-----------------------------
Case #1: rect1[0] >= rect0[2]
-----------------------------

    (rect0[2], rect0[3])
            |
            v
.___________.  .___________.
|           |  |           |
|   rect0   |  |   rect1   |
|           |  |           |
.___________.  .___________.
               ^
               |
       (rect1[0], rect1[1])
       
-----------------------------
Case #2: rect0[0] >= rect1[2]
-----------------------------

    (rect1[2], rect1[3])
            |
            v
.___________.  .___________.
|           |  |           |
|   rect1   |  |   rect0   |
|           |  |           |
.___________.  .___________.
               ^
               |
       (rect0[0], rect0[1])

-----------------------------
Case #3: rect1[1] >= rect0[3]
-----------------------------
                        .___________.
                        |           |
                        |   rect1   | 
                        |           |
(rect1[0], rect1[1]) -->.___________.

                        .___________.<-- (rect0[2], rect0[3]) 
                        |           |
                        |   rect0   | 
                        |           |
                        .___________. 
-----------------------------
Case #4: rect0[1] >= rect1[3]
-----------------------------
                        .___________.
                        |           |
                        |   rect0   | 
                        |           |
(rect0[0], rect0[1]) -->.___________.

                        .___________.<-- (rect1[2], rect1[3]) 
                        |           |
                        |   rect1   | 
                        |           |
                        .___________. 
"""
