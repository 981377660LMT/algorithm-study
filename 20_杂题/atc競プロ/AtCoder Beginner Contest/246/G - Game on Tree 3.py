# 给定一棵根为1的树，除了根，每个点都有一个权值w;，现在小明和小红从根节点开始按照如下规则玩一个游戏:
# 1.小红任意选择一个点，把这个点的权值变为02.小明从当前点出发，可以走到任意一个儿子节点
# 3.然后小明可以决定是否结束游戏(如果小明在叶子节点则必须结束游戏)
# 最后小明获得的分数就是小明所在点的权值，小明希望获得的分数尽可能得高，小红希望小明获得的分数尽可能的低,假设两人都足够聪明的情况下(即总是做出对当前最有利的操作)，小明可以获得的最大分数是多少。

# 使用动态规划(树形dp)和二分答案。
# 考虑对于某一个分数x xx，小明是否存在方案可以获得比x xx大的分数：
# https://blog.csdn.net/qq_62213124/article/details/123933753?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165754204516782425175613%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165754204516782425175613&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-123933753-null-null.142^v32^pc_rank_34,185^v2^control&utm_term=AtCoder%20Beginner%20Contest%20246&spm=1018.2226.3001.4187
